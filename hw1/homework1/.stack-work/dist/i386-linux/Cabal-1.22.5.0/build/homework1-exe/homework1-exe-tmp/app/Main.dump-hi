
==================== FINAL INTERFACE ====================
2016-04-16 10:58:16.951529 UTC

interface main@main:Main 7103
  interface hash: 7701949063e4c56e527baa7d54d7ed07
  ABI hash: 70412688e30d1cb37e1eac374341277f
  export-list hash: bcdd49c58664937d23136acc3454b7b8
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: c0beb5e06f8976555a226dd217f522c3
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.line
  Main.main
module dependencies: HW1
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      homework1-0.1.0.0@homew_HJMcIzX2EUv6SSsk04grWt integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:Data.Foldable 37c1dcdf6448d7800d277e5be0c3fc6f
import  -/  base-4.8.2.0:GHC.Base bf56e93e483b6a281ad97fedb63bfd04
import  -/  base-4.8.2.0:GHC.List ab53ad3f819f64915f1f91641b6e3255
import  -/  base-4.8.2.0:GHC.Show 81f797f6fb519cae2341362c0c4308de
import  -/  base-4.8.2.0:Prelude 0f9dd1bcfa413fa55bb6dca444292bf6
import  -/  base-4.8.2.0:System.IO ddde535dfa6326b813d98489c5399679
import  -/  base-4.8.2.0:Text.Printf 4fa09b2e91675fa0d6c2c943551f710f
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  homework1-0.1.0.0@homew_HJMcIzX2EUv6SSsk04grWt:Lib 31bcbb28a114c143483cfeada68afaac
import  -/  HW1 023ff382b921975fdeb96b8ce1121cdc
  exports: 005e6105b1ab23dff55c4ce53cd33143
  fact2 82b19248a511d9604a0987bca341528d
  hw1_1 b1d4454542a3a7c1c50946c510c8dc35
  hw1_2 81c56f3bcea2ffced33f23468fb01fab
  isPrime af1ceec814a13b9ed25012ad2016382a
  primeSum df046d1c03d135cbf192cb2e4e405a17
e80f25ac2c762af6251ca63a30752cff
  $sprintf2 :: () ~ ()
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Eq# @ * @ () @ () @~ <()>_N) -}
8da8d9bc59d2c9418387e86c6cb0923e
  line :: Text.Printf.PrintfType t => GHC.Types.Int -> t
  {- Arity: 2, Strictness: <C(C(S)),1*C1(C1(U))><L,1*U(U)>,
     Unfolding: (\ @ t
                   $dPrintfType :: Text.Printf.PrintfType t
                   eta :: GHC.Types.Int ->
                 $dPrintfType `cast` (Text.Printf.NTCo:PrintfType[0] <t>_N)
                   Main.line_fmts
                   (GHC.Types.:
                      @ Text.Printf.UPrintf
                      (Text.Printf.$w$sparseIntFormat,
                       let {
                         w :: GHC.Types.Int
                         = case eta of ww { GHC.Types.I# ww1 ->
                           GHC.List.$w!! @ GHC.Types.Int Lib.fibs ww1 }
                       } in
                       \ w1 :: Text.Printf.FieldFormat ->
                       case w1 of ww { Text.Printf.FieldFormat ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                       case ww7 of ww8 { GHC.Types.C# ww9 ->
                       Text.Printf.$w$sformatInt w ww1 ww2 ww3 ww4 ww5 ww6 ww9 } })
                      (GHC.Types.[] @ Text.Printf.UPrintf))) -}
1e624375a9a7ad5e19937392b1469815
  line1 ::
    GHC.Types.Int
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,1*U(U)><L,U>,
     Unfolding: (\ eta :: GHC.Types.Int
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 Text.Printf.$wa
                   @ ()
                   Main.$sprintf2
                   Main.line_fmts
                   (GHC.Types.:
                      @ Text.Printf.UPrintf
                      (Text.Printf.$w$sparseIntFormat,
                       let {
                         w :: GHC.Types.Int
                         = case eta of ww { GHC.Types.I# ww1 ->
                           GHC.List.$w!! @ GHC.Types.Int Lib.fibs ww1 }
                       } in
                       \ w1 :: Text.Printf.FieldFormat ->
                       case w1 of ww { Text.Printf.FieldFormat ww1 ww2 ww3 ww4 ww5 ww6 ww7 ->
                       case ww7 of ww8 { GHC.Types.C# ww9 ->
                       Text.Printf.$w$sformatInt w ww1 ww2 ww3 ww4 ww5 ww6 ww9 } })
                      (GHC.Types.[] @ Text.Printf.UPrintf))
                   eta1) -}
f908fc16e0120c531d40fc4204302b14
  line_fmts :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "%d, "#) -}
1b8ec6a1aee17add5046fef1b19ba32c
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
19610b4b8013ff69414df003eca66793
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main29
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 case Main.main28 1 ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main27
                        GHC.Types.True
                        ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main24
                        GHC.Types.True
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main22
                        GHC.Types.True
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main18
                        GHC.Types.True
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main14
                        GHC.Types.True
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main11
                        GHC.Types.True
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main7
                        GHC.Types.True
                        ipv14 of ds9 { (#,#) ipv16 ipv17 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   Main.main2
                   GHC.Types.True
                   ipv16 } } } } } } } } }) -}
6ba9d43bdab84844242e218e09a64ecb
  main10 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
061cded34204a096824ec9c1dbfb9fe6
  main11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "task 4 "#
                   Main.main12) -}
04ff6baafb734865b6252fddf2e215c6
  main12 :: [GHC.Types.Char]
  {- Unfolding: (case HW1.isPrime Main.main13 of wild {
                   GHC.Types.False -> GHC.Show.shows17
                   GHC.Types.True -> GHC.Show.shows16 }) -}
24817c51cb50fad82bbff672d3e670c5
  main13 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 17) -}
88f7dedace2302e67195903b149ff688
  main14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "task 3.2 "#
                   Main.main15) -}
69fb3af1ead1eac2e4ac3bffc419be0a
  main15 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.Show.$w$cshowsPrec1
                        0
                        Main.main16
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
92876698b221eca3103217f039df2034
  main16 :: GHC.Integer.Type.Integer
  {- Unfolding: (HW1.fact2 Main.main17) -}
67cc6303a9d5ee3689ec6f2ce405d685
  main17 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 4) -}
a9b558bb8f4a50bd9c45844a3e2b55f9
  main18 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "task 3 "#
                   Main.main19) -}
a0b3c972856e8109e8ccf124f22f4f92
  main19 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.Show.$w$cshowsPrec1
                        0
                        Main.main20
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
a26650433e5314762da637c9580be0de
  main2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "task 5 "#
                   Main.main3) -}
2a476e7671e247b414301d86fe47592c
  main20 :: GHC.Integer.Type.Integer
  {- Unfolding: (HW1.fact2 Main.main21) -}
0d7219c92a7adc70a83fe385eafa8073
  main21 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 3) -}
a19053f0dc20aeb617ce86a734972fc0
  main22 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "task 2 "#
                   Main.main23) -}
247416808ae6a045620a45cfd9999010
  main23 :: [GHC.Types.Char]
  {- Unfolding: (case HW1.$whw1_2 Main.main21 of ww { DEFAULT ->
                 GHC.Float.$w$sshowSignedFloat
                   GHC.Float.$fShowDouble_$sshowFloat
                   GHC.Show.shows18
                   ww
                   (GHC.Types.[] @ GHC.Types.Char) }) -}
520335b300cd1338b8e5936896bc562c
  main24 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "task 1"#
                   Main.main25) -}
ba9995fe65be72afdfbab8b8c75ef8d6
  main25 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   " 1+2 = "#
                   Main.main26) -}
0bec0f5f8bd2d3493a375a7de059ac26
  main26 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.Show.$w$cshowsPrec1
                        0
                        Main.main21
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
8e92ace5ce13f01cb584f8d67c701ff1
  main27 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "..."#) -}
20688a13a1466d3fde5d26f63ee52fbb
  main28 ::
    GHC.Prim.Int#
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 2, Strictness: <L,U><L,U> -}
3d1b68f1cf8c62b1fd35eb300a7c98b7
  main29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Fib: "#) -}
40deec6dbff312c49fbe38bafcbac282
  main3 :: [GHC.Types.Char]
  {- Unfolding: (case GHC.Show.$w$cshowsPrec1
                        0
                        Main.main4
                        (GHC.Types.[] @ GHC.Types.Char) of ww2 { (#,#) ww3 ww4 ->
                 GHC.Types.: @ GHC.Types.Char ww3 ww4 }) -}
30dfbe511560b8ce5c515e762d0e9ad4
  main30 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
a2c30bd37acef0421adf7077cd04697d
  main4 :: GHC.Integer.Type.Integer
  {- Unfolding: (HW1.primeSum Main.main6 Main.main5) -}
cf1730b792e4c1fd33d4dd79be1012bf
  main5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 15) -}
a99c89035d471a5c8ccf13bbe5026e9e
  main6 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 8) -}
cbf8539c29ac0cdd78d7c58d55d58915
  main7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackAppendCString#
                   "task 5 "#
                   Main.main8) -}
b6eb4845417e03ea2f8333d777805b73
  main8 :: GHC.Base.String
  {- Unfolding: (GHC.Show.$fShowInteger_$cshowList
                   Main.main9
                   (GHC.Types.[] @ GHC.Types.Char)) -}
511e63d7bb4aecafa051e2b5890a161c
  main9 :: [GHC.Integer.Type.Integer]
  {- Unfolding: (GHC.Enum.enumDeltaToInteger
                   Main.main6
                   Main.main10
                   Main.main5) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

