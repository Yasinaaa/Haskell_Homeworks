
==================== FINAL INTERFACE ====================
2016-03-11 03:54:27.47429 UTC

interface homew_HJMcIzX2EUv6SSsk04grWt:Lib 7103
  interface hash: 89fd77bc46eb6530308ddf5ca2b5e5a1
  ABI hash: be5a546b0fd3a50dfecf2a5a2c20c3b2
  export-list hash: 155922c1ac00b872ee8d9044668bf0db
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: a729319f406451ebd33a50da2b420fc1
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.fact2
  Lib.hw1_1
  Lib.hw1_2
  Lib.isPrime
  Lib.primeSum
module dependencies:
package dependencies: base-4.8.2.0* ghc-prim-0.4.0.0
                      integer-gmp-1.0.0.0
orphans: base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
family instance modules: base-4.8.2.0:Control.Applicative
                         base-4.8.2.0:Data.Either base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:GHC.Generics
import  -/  base-4.8.2.0:GHC.Base bf56e93e483b6a281ad97fedb63bfd04
import  -/  base-4.8.2.0:GHC.Num 099c29dfc2c0e3c154d011e91b663293
import  -/  base-4.8.2.0:GHC.Real da292570a9ba3b498203d266364d0cfe
import  -/  base-4.8.2.0:GHC.Show 81f797f6fb519cae2341362c0c4308de
import  -/  base-4.8.2.0:Prelude 0f9dd1bcfa413fa55bb6dca444292bf6
import  -/  base-4.8.2.0:System.IO ddde535dfa6326b813d98489c5399679
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type 85cf1b8b2d409827fbcd445bcd31da6b
c25e1c377a0cee61f5a79ff3a3ba57bb
  $whw1_2 :: GHC.Integer.Type.Integer -> GHC.Prim.Double#
  {- Arity: 1, Strictness: <S,U>, Inline: [0],
     Unfolding: (\ w :: GHC.Integer.Type.Integer ->
                 case GHC.Integer.Type.leInteger# w Lib.fact5 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.gtInteger#
                             w
                             Lib.fact5 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False -> case Lib.hw1_5 ret_ty GHC.Prim.Double# of {}
                        GHC.Types.True -> Lib.$whw1_2' w 0.0 } }
                   GHC.Types.True
                   -> case Lib.hw1_4 ret_ty GHC.Prim.Double# of {} } }) -}
d942bbe91952635aa6c85d51559737c3
  $whw1_2' ::
    GHC.Integer.Type.Integer -> GHC.Prim.Double# -> GHC.Prim.Double#
  {- Arity: 2, Strictness: <S,U><L,U>, Inline: [0] -}
202948e434b739407e144c491dbfffa0
  fact1 :: GHC.Integer.Type.Integer
  {- Strictness: b -}
70d2d92ff08b5dc87385971e399497d7
  fact2 :: GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ n :: GHC.Integer.Type.Integer ->
                 case GHC.Integer.Type.ltInteger# n Lib.fact5 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.geInteger#
                             n
                             Lib.fact5 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False -> Lib.fact4
                        GHC.Types.True -> Lib.fact2' n Lib.fact3 } }
                   GHC.Types.True -> Lib.fact1 } }) -}
73201019351a378a4581202e181ad29a
  fact2' ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,U><L,U> -}
184f5fc3bf466c26b96550f0c30f3b26
  fact3 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
364e359d59efdc8520e38e27f0cda337
  fact4 :: GHC.Integer.Type.Integer
  {- Strictness: b -}
3a0f8aae611d4d7730938ccaac53c750
  fact5 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
a1a1806a2ac99168969837e13796892d
  hw1_1 ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                GHC.Integer.Type.plusInteger -}
b3efa657beb33242ef5e95d1be642f98
  hw1_2 :: GHC.Integer.Type.Integer -> GHC.Types.Double
  {- Arity: 1, Strictness: <S,U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: GHC.Integer.Type.Integer ->
                 case Lib.$whw1_2 w of ww { DEFAULT -> GHC.Types.D# ww }) -}
c02e11c0ea7034b8c587d4edf5e539ad
  hw1_4 :: GHC.Types.Double
  {- Strictness: b -}
650786b0f04c73b9e02cf129a7d5bd8a
  hw1_5 :: GHC.Types.Double
  {- Strictness: b -}
0e1fdfe1631cf9025ea3835b1078e9aa
  isPrime :: GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ n :: GHC.Integer.Type.Integer ->
                 case GHC.Integer.Type.leInteger# n Lib.fact5 of wild { DEFAULT ->
                 case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild of wild1 {
                   GHC.Types.False
                   -> case GHC.Integer.Type.gtInteger#
                             n
                             Lib.fact5 of wild2 { DEFAULT ->
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild2 of wild3 {
                        GHC.Types.False -> Lib.isPrime3
                        GHC.Types.True -> Lib.isPrime' n Lib.isPrime2 } }
                   GHC.Types.True -> Lib.isPrime1 } }) -}
249d79e953ce989e100e6e210f7d1cf8
  isPrime' ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Types.Bool
  {- Arity: 2, Strictness: <S,U><S,U> -}
b8091760549039badb7642f01299cd87
  isPrime1 :: GHC.Types.Bool
  {- Strictness: b -}
93d90fb03de54da1164bac50d12b7247
  isPrime2 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 2) -}
2d2d2281c177d3cf919ae5e31ea59b8d
  isPrime3 :: GHC.Types.Bool
  {- Strictness: b -}
5617be0c28b67dac9e2517152571e51b
  primeSum ::
    GHC.Integer.Type.Integer
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,U><S,U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

